{"ast":null,"code":"import axios from \"axios\";\nexport const getTopURLs = async () => {\n  let isPending = true;\n  try {\n    var _short_urls$urls;\n    let {\n      data: short_urls\n    } = await axios.get(`http://localhost:3000/`);\n    let res = (_short_urls$urls = short_urls.urls) === null || _short_urls$urls === void 0 ? void 0 : _short_urls$urls.map(item => {\n      return {\n        ...item,\n        created_at: new Date(item.created_at).toLocaleDateString(),\n        updated_at: new Date(item.updated_at).toLocaleDateString()\n      };\n    });\n    return {\n      data: res,\n      error: undefined,\n      isPending: false\n    };\n  } catch (error) {\n    console.log(error);\n    return {\n      data: undefined,\n      error,\n      isPending\n    };\n  }\n};\nexport const encode = n => {\n  const BASE62_CHARACTERS = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n  if (typeof n !== 'number' || n === null) return null;\n  if (n === 0) return '0';\n  let shortAlias = '';\n  while (n > 0) {\n    shortAlias += BASE62_CHARACTERS[n % 62];\n    n = Math.floor(n / 62);\n  }\n  return shortAlias.split('').reverse().join('');\n};","map":{"version":3,"names":["axios","getTopURLs","isPending","_short_urls$urls","data","short_urls","get","res","urls","map","item","created_at","Date","toLocaleDateString","updated_at","error","undefined","console","log","encode","n","BASE62_CHARACTERS","shortAlias","Math","floor","split","reverse","join"],"sources":["/home/visshon/Downloads/gURLShortner/frontend/src/lib/url.ts"],"sourcesContent":["\nimport axios from \"axios\"\n\nexport interface SHORT_URL {\n\t\"id\":number\n\t\"click_count\": number,\n\t\"full_url\":string\n\t\"title\":string\n\t\"updated_at\":string\n\t\"created_at\":string\n}\n\nexport const getTopURLs = async():\n    Promise<{\n\t\tdata:any,\n\t\terror:unknown|undefined,\n\t\tisPending:boolean,\n\t}>=>{\n\n\tlet isPending = true\n\n\ttry {\n\n\t\tlet {data:short_urls} = await axios.get(`http://localhost:3000/`)\n        let res = short_urls.urls?.map((item:SHORT_URL)=> {\n            return {\n                ...item,\n                created_at:new Date(item.created_at).toLocaleDateString(),\n                updated_at:new Date(item.updated_at).toLocaleDateString()\n            }\n        })\n\n\t\treturn {\n\t\t\tdata:res,\n\t\t\terror:undefined,\n\t\t\tisPending:false\n\t\t}\n\t\t\n\t}\n\tcatch(error:unknown){\n\t\tconsole.log(error)\n\t\treturn {\n\t\t\tdata:undefined,\n\t\t\terror,\n\t\t\tisPending\n\t\t}\n\t\t\n\t}\n}\n\nexport const encode = (n:number) => {\n    const BASE62_CHARACTERS = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\n    if (typeof n !== 'number' || n === null) return null\n    if (n === 0) return '0'\n\n    let shortAlias = ''\n\n    while (n > 0) {\n        shortAlias += BASE62_CHARACTERS[n % 62];\n        n = Math.floor(n / 62);\n    }\n\n    return shortAlias.split('').reverse().join('');\n}"],"mappings":"AACA,OAAOA,KAAK,MAAM,OAAO;AAWzB,OAAO,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAKrB;EAEJ,IAAIC,SAAS,GAAG,IAAI;EAEpB,IAAI;IAAA,IAAAC,gBAAA;IAEH,IAAI;MAACC,IAAI,EAACC;IAAU,CAAC,GAAG,MAAML,KAAK,CAACM,GAAG,CAAC,wBAAwB,CAAC;IAC3D,IAAIC,GAAG,IAAAJ,gBAAA,GAAGE,UAAU,CAACG,IAAI,cAAAL,gBAAA,uBAAfA,gBAAA,CAAiBM,GAAG,CAAEC,IAAc,IAAI;MAC9C,OAAO;QACH,GAAGA,IAAI;QACPC,UAAU,EAAC,IAAIC,IAAI,CAACF,IAAI,CAACC,UAAU,CAAC,CAACE,kBAAkB,CAAC,CAAC;QACzDC,UAAU,EAAC,IAAIF,IAAI,CAACF,IAAI,CAACI,UAAU,CAAC,CAACD,kBAAkB,CAAC;MAC5D,CAAC;IACL,CAAC,CAAC;IAER,OAAO;MACNT,IAAI,EAACG,GAAG;MACRQ,KAAK,EAACC,SAAS;MACfd,SAAS,EAAC;IACX,CAAC;EAEF,CAAC,CACD,OAAMa,KAAa,EAAC;IACnBE,OAAO,CAACC,GAAG,CAACH,KAAK,CAAC;IAClB,OAAO;MACNX,IAAI,EAACY,SAAS;MACdD,KAAK;MACLb;IACD,CAAC;EAEF;AACD,CAAC;AAED,OAAO,MAAMiB,MAAM,GAAIC,CAAQ,IAAK;EAChC,MAAMC,iBAAiB,GAAG,gEAAgE;EAE1F,IAAI,OAAOD,CAAC,KAAK,QAAQ,IAAIA,CAAC,KAAK,IAAI,EAAE,OAAO,IAAI;EACpD,IAAIA,CAAC,KAAK,CAAC,EAAE,OAAO,GAAG;EAEvB,IAAIE,UAAU,GAAG,EAAE;EAEnB,OAAOF,CAAC,GAAG,CAAC,EAAE;IACVE,UAAU,IAAID,iBAAiB,CAACD,CAAC,GAAG,EAAE,CAAC;IACvCA,CAAC,GAAGG,IAAI,CAACC,KAAK,CAACJ,CAAC,GAAG,EAAE,CAAC;EAC1B;EAEA,OAAOE,UAAU,CAACG,KAAK,CAAC,EAAE,CAAC,CAACC,OAAO,CAAC,CAAC,CAACC,IAAI,CAAC,EAAE,CAAC;AAClD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}