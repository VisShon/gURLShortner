{"ast":null,"code":"var _s = $RefreshSig$();\n// #region Imports\nimport { useEffect } from \"react\";\n// #endregion\n\nfunction checkPressed(combination, event) {\n  const reservedKeys = [\"alt\", \"ctrl\", \"meta\", \"shift\", \"mod\"];\n  const {\n    altKey,\n    ctrlKey,\n    metaKey,\n    shiftKey,\n    key: pressedKey\n  } = event;\n  const keys = combination.toLowerCase().split(\"+\").map(item => item.trim());\n  const alt = keys.includes(\"alt\");\n  const mod = keys.includes(\"mod\");\n  const shift = keys.includes(\"shift\");\n\n  // side key with modifier\t\n  const hotkey = keys.find(key => !reservedKeys.includes(key));\n\n  // check if the modifier key is being pressed\n  if (alt !== altKey) return false;\n  if (shift !== shiftKey) return false;\n  if (mod && !ctrlKey && !metaKey) return false;\n\n  // key pressed case\n  if (hotkey && pressedKey.toLowerCase() === hotkey.toLowerCase()) return true;\n\n  //base case\n  return false;\n}\nexport function useShortcut(shortcuts) {\n  _s();\n  useEffect(() => {\n    const keydownListener = event => {\n      shortcuts.forEach(([combination, handler, preventDefault = true]) => {\n        if (checkPressed(combination, event)) {\n          if (preventDefault) event.preventDefault();\n          handler(event);\n        }\n      });\n    };\n    document.documentElement.addEventListener(\"keydown\", keydownListener);\n    return () => document.documentElement.removeEventListener(\"keydown\", keydownListener);\n  }, [shortcuts]);\n}\n_s(useShortcut, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");","map":{"version":3,"names":["useEffect","checkPressed","combination","event","reservedKeys","altKey","ctrlKey","metaKey","shiftKey","key","pressedKey","keys","toLowerCase","split","map","item","trim","alt","includes","mod","shift","hotkey","find","useShortcut","shortcuts","_s","keydownListener","forEach","handler","preventDefault","document","documentElement","addEventListener","removeEventListener"],"sources":["/home/visshon/Downloads/gURLShortner/frontend/src/hooks/useShortcut.ts"],"sourcesContent":["// #region Imports\nimport { useEffect } from \"react\"\n// #endregion\n\nexport type KeyBinding = [\n\tcombination:string, \n\thandler: (event: KeyboardEvent) => void,\n\tpreventDefault?: boolean\n]\n\n\nfunction checkPressed( combination:string , event: KeyboardEvent): boolean {\n\n\tconst reservedKeys = [\"alt\", \"ctrl\", \"meta\", \"shift\", \"mod\"]\t\n\tconst { altKey, ctrlKey, metaKey, shiftKey, key: pressedKey } = event\n\n\tconst keys = combination\n\t\t\t\t.toLowerCase()\n\t\t\t\t.split(\"+\")\n\t\t\t\t.map((item) => item.trim())\n\n\tconst alt =  keys.includes(\"alt\")\n\tconst mod =  keys.includes(\"mod\")\n\tconst shift =  keys.includes(\"shift\")\n\n\t// side key with modifier\t\n\tconst hotkey = keys.find((key) => !reservedKeys.includes(key))\n\t\n\t// check if the modifier key is being pressed\n\tif (alt !== altKey) return false\n\tif (shift !== shiftKey) return false\n\tif (mod && (!ctrlKey && !metaKey) ) return false\n\n\t// key pressed case\n\tif ( hotkey && pressedKey.toLowerCase() === hotkey.toLowerCase()) return true\n  \n\t//base case\n\treturn false\n\n}\n\nexport function useShortcut( shortcuts: KeyBinding[] ){\n\n\tuseEffect(() => {\n\n\t\tconst keydownListener = (event: KeyboardEvent) => {\n\n\t\t\tshortcuts.forEach(([combination, handler, preventDefault = true]) => {\n\t\t\t\tif(checkPressed(combination, event)){\n\t\t\t\t\tif (preventDefault) event.preventDefault()\n\t\t\t\t\thandler(event)\n\t\t\t\t}\n\t\t\t})\n\n\t\t}\n\n\t\tdocument.documentElement.addEventListener(\"keydown\", keydownListener)\n\t\treturn () => document.documentElement.removeEventListener(\"keydown\", keydownListener)\n\n\t}, [shortcuts])\n\n}\n\n"],"mappings":";AAAA;AACA,SAASA,SAAS,QAAQ,OAAO;AACjC;;AASA,SAASC,YAAYA,CAAEC,WAAkB,EAAGC,KAAoB,EAAW;EAE1E,MAAMC,YAAY,GAAG,CAAC,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,KAAK,CAAC;EAC5D,MAAM;IAAEC,MAAM;IAAEC,OAAO;IAAEC,OAAO;IAAEC,QAAQ;IAAEC,GAAG,EAAEC;EAAW,CAAC,GAAGP,KAAK;EAErE,MAAMQ,IAAI,GAAGT,WAAW,CACpBU,WAAW,CAAC,CAAC,CACbC,KAAK,CAAC,GAAG,CAAC,CACVC,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC;EAE9B,MAAMC,GAAG,GAAIN,IAAI,CAACO,QAAQ,CAAC,KAAK,CAAC;EACjC,MAAMC,GAAG,GAAIR,IAAI,CAACO,QAAQ,CAAC,KAAK,CAAC;EACjC,MAAME,KAAK,GAAIT,IAAI,CAACO,QAAQ,CAAC,OAAO,CAAC;;EAErC;EACA,MAAMG,MAAM,GAAGV,IAAI,CAACW,IAAI,CAAEb,GAAG,IAAK,CAACL,YAAY,CAACc,QAAQ,CAACT,GAAG,CAAC,CAAC;;EAE9D;EACA,IAAIQ,GAAG,KAAKZ,MAAM,EAAE,OAAO,KAAK;EAChC,IAAIe,KAAK,KAAKZ,QAAQ,EAAE,OAAO,KAAK;EACpC,IAAIW,GAAG,IAAK,CAACb,OAAO,IAAI,CAACC,OAAQ,EAAG,OAAO,KAAK;;EAEhD;EACA,IAAKc,MAAM,IAAIX,UAAU,CAACE,WAAW,CAAC,CAAC,KAAKS,MAAM,CAACT,WAAW,CAAC,CAAC,EAAE,OAAO,IAAI;;EAE7E;EACA,OAAO,KAAK;AAEb;AAEA,OAAO,SAASW,WAAWA,CAAEC,SAAuB,EAAE;EAAAC,EAAA;EAErDzB,SAAS,CAAC,MAAM;IAEf,MAAM0B,eAAe,GAAIvB,KAAoB,IAAK;MAEjDqB,SAAS,CAACG,OAAO,CAAC,CAAC,CAACzB,WAAW,EAAE0B,OAAO,EAAEC,cAAc,GAAG,IAAI,CAAC,KAAK;QACpE,IAAG5B,YAAY,CAACC,WAAW,EAAEC,KAAK,CAAC,EAAC;UACnC,IAAI0B,cAAc,EAAE1B,KAAK,CAAC0B,cAAc,CAAC,CAAC;UAC1CD,OAAO,CAACzB,KAAK,CAAC;QACf;MACD,CAAC,CAAC;IAEH,CAAC;IAED2B,QAAQ,CAACC,eAAe,CAACC,gBAAgB,CAAC,SAAS,EAAEN,eAAe,CAAC;IACrE,OAAO,MAAMI,QAAQ,CAACC,eAAe,CAACE,mBAAmB,CAAC,SAAS,EAAEP,eAAe,CAAC;EAEtF,CAAC,EAAE,CAACF,SAAS,CAAC,CAAC;AAEhB;AAACC,EAAA,CApBeF,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}