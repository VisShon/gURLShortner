{"ast":null,"code":"var _jsxFileName = \"/home/visshon/Downloads/gURLShortner/frontend/src/context/URLContext.tsx\",\n  _s = $RefreshSig$();\n// #region Imports\nimport { createContext, useState, useEffect } from \"react\";\nimport { getTopURLs } from \"../lib/url\";\nimport axios from \"axios\";\nimport { encode } from \"../lib/url\";\n// #endregion\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const URLsContext = /*#__PURE__*/createContext({});\nexport function URLsProvider({\n  children\n}) {\n  _s();\n  const [urls, setUrls] = useState([]);\n  const create = async full_url => {\n    try {\n      var _res$data;\n      const res = await axios.post(\"http://localhost:3000/short_urls\", {\n        full_url\n      });\n      const {\n        data,\n        error\n      } = await getTopURLs();\n      setUrls(data);\n      if (res !== null && res !== void 0 && (_res$data = res.data) !== null && _res$data !== void 0 && _res$data.short_code) {\n        var _res$data2;\n        _addlocal({\n          short_code: res.data.short_code,\n          full_url: full_url\n        });\n        return res === null || res === void 0 ? void 0 : (_res$data2 = res.data) === null || _res$data2 === void 0 ? void 0 : _res$data2.short_code;\n      }\n    } catch (err) {\n      console.log(err);\n      alert(`Invalid URL: Bad Request`);\n    }\n  };\n  const update = async (id, new_url) => {\n    try {\n      const res = await axios.patch(`http://localhost:3000/short_urls/${id}`, {\n        new_url\n      });\n      const {\n        data,\n        error\n      } = await getTopURLs();\n      setUrls(data);\n    } catch (err) {\n      alert(`Invalid URL`);\n    }\n  };\n  const destroy = async id => {\n    try {\n      const res = await axios.delete(`http://localhost:3000/short_urls/${id}`);\n      const {\n        data,\n        error\n      } = await getTopURLs();\n      setUrls(data);\n      _updatelocal(id);\n    } catch (err) {\n      alert(`Invalid URL`);\n    }\n  };\n  const _addlocal = record => {\n    const prev = JSON.parse(localStorage.getItem('local_urls'));\n    if ((prev === null || prev === void 0 ? void 0 : prev.length) > 0) localStorage.setItem('local_urls', JSON.stringify([...prev, record]));else localStorage.setItem('local_urls', JSON.stringify([record]));\n  };\n  const _updatelocal = id => {\n    const prev = JSON.parse(localStorage.getItem('local_urls'));\n    const short_code = encode(id);\n    if ((prev === null || prev === void 0 ? void 0 : prev.length) > 0) localStorage.setItem('local_urls', JSON.stringify(prev.filter(item => item.short_code !== short_code)));\n  };\n  useEffect(() => {\n    (async () => {\n      const {\n        data,\n        error\n      } = await getTopURLs();\n      setUrls(data);\n    })();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(URLsContext.Provider, {\n    value: {\n      urls: urls,\n      create,\n      update,\n      destroy\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 9\n  }, this);\n}\n_s(URLsProvider, \"yWEUazUR2UJcKeFevkYBcP+Gsyg=\");\n_c = URLsProvider;\nvar _c;\n$RefreshReg$(_c, \"URLsProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","getTopURLs","axios","encode","jsxDEV","_jsxDEV","URLsContext","URLsProvider","children","_s","urls","setUrls","create","full_url","_res$data","res","post","data","error","short_code","_res$data2","_addlocal","err","console","log","alert","update","id","new_url","patch","destroy","delete","_updatelocal","record","prev","JSON","parse","localStorage","getItem","length","setItem","stringify","filter","item","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/visshon/Downloads/gURLShortner/frontend/src/context/URLContext.tsx"],"sourcesContent":["// #region Imports\nimport { \n    createContext, \n    ReactNode,\n    useState,\n    useEffect,\n} from \"react\";\n\nimport { getTopURLs, SHORT_URL } from \"../lib/url\";\nimport axios from \"axios\";\nimport { encode } from \"../lib/url\";\n// #endregion\n\nexport const URLsContext = createContext({} as {\n    urls: SHORT_URL[]|[],\n    create: (full_url:string) => Promise<string|void>,\n    update: (id:number,new_url:string) => void,\n    destroy: (id:number) => void,\n});\n\nexport function URLsProvider({ children }: {\n    children: ReactNode\n}) {\n\n    const [urls,setUrls] = useState<SHORT_URL[]>([])\n\n    const create = async (full_url:string) => {\n        try{\n            const res = await axios.post(\"http://localhost:3000/short_urls\",{\n                full_url\n            })\n\n            \n\n            const {data,error} = await getTopURLs()\n            setUrls(data)\n            \n            \n\n            if(res?.data?.short_code){\n                _addlocal({\n                    short_code:res.data.short_code,\n                    full_url:full_url\n                })\n\n                return res?.data?.short_code\n            }\n\n        }\n        catch(err){\n            console.log(err)\n            alert(`Invalid URL: Bad Request`)\n        }\n    }\n\n    const update = async(id:number,new_url:string) => {\n\n        try{\n            const res = await axios.patch(`http://localhost:3000/short_urls/${id}`,{\n                new_url\n            })\n\n            const {data,error} = await getTopURLs()\n            setUrls(data)\n\n        }\n        catch(err){\n            alert(`Invalid URL`)\n        }\n        \n    }\n\n    const destroy = async (id:number) => {\n        try{\n            const res = await axios.delete(`http://localhost:3000/short_urls/${id}`)\n            const {data,error} = await getTopURLs()\n            setUrls(data)\n            _updatelocal(id)\n        }\n        catch(err){\n            alert(`Invalid URL`)\n        }\n    }\n\n    const _addlocal = (record:{\n        short_code: string,\n        full_url: string,\n    }) => {\n        const prev = JSON.parse(localStorage.getItem('local_urls')!)\n        if (prev?.length > 0)\n            localStorage.setItem('local_urls',\n                JSON.stringify([\n                    ...prev,\n                    record\n                ])\n            )\n        else\n            localStorage.setItem('local_urls',\n                JSON.stringify([record])\n            )\n           \n    }\n\n    const _updatelocal = (id:number) => {\n        const prev = JSON.parse(localStorage.getItem('local_urls')!)\n        const short_code = encode(id)\n        if (prev?.length > 0)\n            localStorage.setItem('local_urls',\n                JSON.stringify(\n                    prev.filter((\n                        item:{\n                            short_code: string,\n                            full_url: string,\n                        }\n                    )=>item.short_code!==short_code)\n                )\n            )\n    }\n\n    useEffect(()=>{\n        (async()=>{\n            const {data,error} = await getTopURLs()\n            setUrls(data)\n        })()\n    },[])\n\n    return (\n        <URLsContext.Provider value={{\n            urls:urls,\n            create,\n            update,\n            destroy,\n        }}>\n            {children}\n        </URLsContext.Provider>\n    );\n}\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}